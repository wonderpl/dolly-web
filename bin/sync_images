#!/usr/bin/python2.7
import sys
import threading
from datetime import datetime
from boto import connect_s3
from rockpack.mainsite import app


threshold = app.config.get('IMAGE_SYNC_THRESHOLD', datetime(2012, 1, 1))

if len(sys.argv) == 3:
    src, dst = sys.argv[1:]
else:
    dst = app.config['S3_BUCKET']
    src = dst.replace('dev', 'us')


def worker(prefix):
    success = skipped = failed = 0
    conn = connect_s3()
    sbucket = conn.get_bucket(src)
    dbucket = conn.get_bucket(dst)
    for k in sbucket.list(prefix):
        modified = datetime.strptime(k.last_modified[:19], '%Y-%m-%dT%H:%M:%S')
        if modified < threshold:
            skipped += 1
        else:
            try:
                dbucket.copy_key(k.name, src, k.name, headers={'x-amz-acl': 'public-read'})
            except Exception:
                print 'FAILED', k.name
                failed += 1
            else:
                success += 1
    print '%s: %d %d %d' % (prefix, success, skipped, failed)


prefixes = []
for type in 'channel', 'avatar', 'profile':
    for size in app.config[type.upper() + '_IMAGES'].keys() + ['original']:
        prefixes.append('/'.join((app.config['IMAGE_BASE_PATH'], type, size, '')))

for prefix in prefixes:
    threading.Thread(target=worker, args=(prefix,)).start()
